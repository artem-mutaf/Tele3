from aiogram import Bot, Dispatcher, executor, types
from aiogram.types.web_app_info import WebAppInfo

bot = Bot('7335411399:AAFIqx2qxCDNUy6rQpPvnLHqBOsG-Ytrr0M')

dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    markup = types.InlineKeyboardMarkup(resize_keyboard=True)
    markup.add(types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –∫–æ—à–µ–ª–µ–∫', web_app=WebAppInfo(url='https://artem-mutaf.github.io/Tele3/')))
    await message.answer(f'<b>–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}</b>\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –≤–∞—à <strong>–∫–æ—à–µ–ª–µ–∫</strong>üíº\n'
                         f'', parse_mode="html",reply_markup=markup)

@dp.message_handler(commands=['wallet'])
async def wallet(message: types.Message):
    markup = types.InlineKeyboardMarkup(resize_keyboard=True)
    markup.add(types.InlineKeyboardButton('–ö–æ—à–µ–ª–µ–∫üíº', web_app=WebAppInfo(url='https://artem-mutaf.github.io/Tele3/')))
    await message.answer(f'–î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –∫–æ—à–µ–ª—ë–∫ –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ...')


#@dp.message_handler(content_types=['photo']) #–ú–æ–∂–Ω–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è
#async def start(message: types.Message):
    #await bot.send_message(message.chat.id, 'Hello')
    #await message.answer('Hello')
    #await message.reply('Hello') # –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ—Ç–≤–µ—Ç–æ–º
    # file = open('/some.png', 'rb')
    # await message.answer_photo(file)

#@dp.message_handler(commands=['inline'])
#async def info(message: types.Message):
    #markup = types.InlineKeyboardMarkup() # –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —Å —Å–∞–π—Ç–æ–º
    #markup.add(types.InlineKeyboardButton('Site', url='https://www.bmw.com/en/index.html'))
    #markup.add(types.InlineKeyboardButton('Hello', callback_data='hello'))
    #await message.reply('Hello', reply_markup=markup)

#@dp.callback_query_handler()
#async def callback(call):
    #await call.message.answer(call.data)

#@dp.message_handler(commands=['reply'])
#async def reply(message: types.Message):
 #   markup = types.ReplyKeyboardMarkup(one_time_keyboard=True) # one_time_keyboard=True –∫–Ω–æ–ø–∫–∏ –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
  #  markup.add(types.InlineKeyboardButton('Site'))
   # markup.add(types.InlineKeyboardButton('Website'))
    #await message.answer('Hello', reply_markup=markup)




executor.start_polling(dp)